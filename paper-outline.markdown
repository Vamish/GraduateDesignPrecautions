# 信息分析与预测系统前端数据对接、框架与用户交互设计

## 引言
## 一、相关技术综述
### 1.1 Bootstrap 前端框架介绍
    Bootstrap是一组用于网站和网络应用程序开发的开源前端（所谓“前端”，指的是展现给最终用户的界面。与之对应的“后端”是在服务器上面运行的代码）框架，
    包括HTML、CSS及JavaScript的框架，提供字体排印、窗体、按钮、导航及其他各种组件及Javascript扩展，旨在使动态网页和Web应用的开发更加容易。
### 1.2 HTML5 存储特性介绍
    HTML5 是HTML 最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。目标是替换1999年所制定的HTML 4.01和XHTML 1.0标准。
    HTML5 在原先DOM 接口的基础上，增加了更多样化的API与自定义数据属性。
    【TODO】图书馆

#### 1.2.1 本地存储API
    本地存储API 是HTML5 API 中的一个新增项。传统网站在页面端的数据存储需求一般靠Cookie 操作，但Cookie 的存储大小十分有限，仅为4KB，常见的用途是在网站“记住密码”、存储用户身份判断数据等。并不适用于存储数据量复杂的情况。
    HTML5 提供的本地存储API 中包括了：localStorage 和  sessionStorage 两种存储对象。其使用范围与生命周期各有不同。localStorage 与sessionStorage 的存储大小一般为5MB，仅在客户端保存，并不参与和服务器的通信。其中localStorage 除非用户清楚，否则将会永久保存，而sessionStorage 仅在当前会话下有效，用户关闭页面或浏览器后都将被清除。
    
[参考文献](http://jerryzou.com/posts/cookie-and-web-storage/)

#### 1.2.2 自定义data-* 属性
    自定义data-* 属性是以"data-*"开头的属性，其没有独立的命名空间。该属性与XML 兼容。
    自定义data-* 属性用于当没有合适的属性或元素时存储页面中或者应用程序的定义数据。
    【TODO】图书馆
[参考文献](https://www.w3.org/TR/2011/WD-html5-20110525/elements.html#embedding-custom-non-visible-data-with-the-data-attributes)
### 1.3 Ajax 介绍

## 二、系统设计
### 2.1 前端数据对接模块设计
### 2.2 程序流程与用户交互设计
### 2.3 多语言配置设计
### 2.4 功能模块化设计
### 2.5 参数处理流程设计
### 2.6 数据展示模块设计

## 三、系统主要功能实现
### 3.1 数据交互
### 3.2 多语言切换
### 3.3 本地配置存储
### 3.4 数据展示

## 四、系统难点的解决与创新
### 4.1 本系统的创新点
#### 4.1.1 多语言配置模块
    【TODO】多语言是这个系统中一个。。。
#### 4.1.2 功能模块化
#### 4.1.3 变量选择规则模块
#### 4.1.4 HTML5 数据存储
##### 4.1.4.1 本地存储API
    【TODO】根据localStorage 与sessionStorage 的特性不同，我们可以知道，localStorage 使用与存储常用的、不会经常改变配置，如用户语种选择、结果小数保留位数。而考虑到用户可能多次使用本系统，所以sessionStorage 更适合存储一些不用长时间存储的值，比如文件的sheet编号、相应功能的配置信息等。
##### 4.1.3.2 自定义data-* 数据存储
### 4.2 本系统的特色
### 4.3 本系统的难点
    【TODO】本系统的难点在与功能多、数据量复杂，配置、数据处理的情况各不相同。

## 总结

## 致谢
    本文在选题、撰写过程和系统的设计上得到了丁跃潮教授的细心帮助与指导，特此感谢。

## 参考文献
